// ContractConfiguration sample file

// Each CONTRACT_TYPE node represents a type of contract that can be offered
CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = SampleContract

    // Contract text details
    title = Simple Test Contract
    description = A more detailed description of the contract.
    synopsis = We want you to do a thing.
    completedMessage = You have done the thing.



    // Contract rewards
    rewardScience = 0.0
    rewardReputation = 0.0
    rewardFunds = 1.0
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0

    // The PARAMETER node defines a contract parameter.  The following parameter
    // displays all the fields that are supported for a parameter across all
    // types.  See the Parameters page for examples of all supported parameters.
    PARAMETER
    {
        name = HasAstronaut
        type = HasAstronaut

        // The type of trait required.
        //
        // Type:      string
        // Required:  No
        // Values (for stock KSP):
        //     Pilot
        //     Engineer
        //     Scientist
        trait = Pilot
    }
    
    BEHAVIOUR
    {
        name = ChangeInventoryParts
        type = ChangeInventoryParts
        
        PARTS
        {
            adding = True //optional, default True
        
            condition = ACCEPTED //required
            //Options are:
            //SUCCEEDED
            //FAILED
            //FINISHED (completed or failed)
            //ACCEPTED
            //CANCELLED
            //EXPIRED
            INVENTORY_PART
            {
                name = fuelTank.long //required
                timesRecovered = 0 //optional, default 0 when adding, -1 (meaning any amount) when removing
                count = 2 //optional, default 1
                MODULES //semi-required, default none (must contain the MODULEs that the ScrapYard.InventoryPart's node contains or it will be interpreted as a different part)
                {
                    MODULE //an example
                    {
                        name = TweakScale
                        isEnabled = True
                        currentScale = 2.5
                        defaultScale = 1.25
                        defaultTransformScale = (1.25, 1.25, 1.25)
                        DryCost = 3462.3999
                        stagingEnabled = True
                        EVENTS
                        {
                        }
                        ACTIONS
                        {
                        }
                        UPGRADESAPPLIED
                        {
                        }
                    }
                }
            }
            INVENTORY_PART
            {
                name = fuelTank.long //required
                timesRecovered = 0 //optional, default 0 when adding, -1 (meaning any amount) when removing
                count = 1 //optional, default 1
            }
        }
        
        PARTS
        {
            adding = False //optional, default True
        
            condition = FINISHED //required
            //Options are:
            //SUCCEEDED
            //FAILED
            //FINISHED (completed or failed)
            //ACCEPTED
            //CANCELLED
            //EXPIRED
            INVENTORY_PART
            {
                name = fuelTank.long //required
                timesRecovered = -1 //optional, default 0 when adding, -1 (meaning any amount) when removing
                count = 2 //optional, default 1
                MODULES //semi-required, default none (must contain the MODULEs that the ScrapYard.InventoryPart's node contains or it will be interpreted as a different part)
                {
                    MODULE //an example
                    {
                        name = TweakScale
                        isEnabled = True
                        currentScale = 2.5
                        defaultScale = 1.25
                        defaultTransformScale = (1.25, 1.25, 1.25)
                        DryCost = 3462.3999
                        stagingEnabled = True
                        EVENTS
                        {
                        }
                        ACTIONS
                        {
                        }
                        UPGRADESAPPLIED
                        {
                        }
                    }
                }
            }
            INVENTORY_PART
            {
                name = fuelTank.long //required
                count = 1 //optional, default 1
            }
        }
    }
}